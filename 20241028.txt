1. 배열
   1) 1차원 배열 
       데이터형[] 배열명 = new 데이터형[갯수];
       배열명.length 배열의 갯수
       배열요소
       인덱스 0부터 시작
   2) 2차원 배열                                   행우선
       데이터형[][] 배열명 = new 데이터형[행갯수][열갯수];
       데이터형[][] 배열명 = new 데이터형[행갯수][];  // 가변배열
         행별로 1차원 배열 생성
      - 확장 for
       for (데이터형[] 1차원 변수명 : 배열명) {
           for (데이터형 변수명 : 1차원 변수명) {
                 ....
           }
       }
       - 일반 for
       for(int i = 0; i < 배열명.length; i++) {
            for(int j = 0; j < 배열명[i].length; j++) {
                 ...
            }
       }
2. 객체 지향
    1) 객체 = 속성(데이터, 필드, 변수) + 기능(메서드);
       클래스 : 설계, 정의
       객체 : 구체적, 사용가능, 클래스의 예로서 생성 instance
         클래스 객체명(참조변수명, reference 변수명) = new 생성자();
       %. 생성자는 클래스와 이름이 같고 ()가 있음
    2) 객체지향 특징
       - 상속(일반화) - 부모의 변수와 메서드를 자기것처럼 사용함 inheritance(generlization)
       - 정보은닉(캡슐화) information hidden(encapsulation)
          상대방이 사용을 허가(public) 또는 금지(private)
       - 다형성(polymophism) 하나의 기능을 다양하게 사용
    3) 선언 : 클래스명 참조변수명
        생성 : 참조변수명 = new 생성자();
        선언과 생성 동시 클래스명  참조변수명 = new 생성자();
        사용
            - 참조변수명.멤버변수 = 값;
            - 참조변수명.메서드명();

      